package com.cognizant.springrest.dao;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.cognizant.springrest.model.Department;
import com.cognizant.springrest.model.Employee;
import com.cognizant.springrest.model.Skill;

@Repository
public class EmployeeDao {

    private static List<Employee> EMPLOYEE_LIST = new ArrayList<>();

    static {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Department d1 = new Department(1, "HR");
            Skill s1 = new Skill(1, "Java");
            Skill s2 = new Skill(2, "Spring");

            Employee e1 = new Employee(1, "John", 25000.0, true, sdf.parse("15/01/1995"), d1, Arrays.asList(s1, s2));
            Employee e2 = new Employee(2, "Jane", 30000.0, false, sdf.parse("12/08/1992"), d1, Arrays.asList(s1));
            EMPLOYEE_LIST.add(e1);
            EMPLOYEE_LIST.add(e2);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public List<Employee> getAllEmployees() {
        return EMPLOYEE_LIST;
    }

    public void updateEmployee(Employee employee) {
        boolean updated = false;
        for (int i = 0; i < EMPLOYEE_LIST.size(); i++) {
            if (EMPLOYEE_LIST.get(i).getId() == employee.getId()) {
                EMPLOYEE_LIST.set(i, employee);
                updated = true;
                break;
            }
        }
        if (!updated) {
            throw new RuntimeException("Employee not found with id: " + employee.getId());
        }
    }

    public void deleteEmployee(int id) {
        boolean removed = EMPLOYEE_LIST.removeIf(emp -> emp.getId() == id);
        if (!removed) {
            throw new RuntimeException("Employee not found with id: " + id);
        }
    }
}
