package com.cognizant.springrest.controller;

import com.cognizant.springrest.model.Department;
import jakarta.validation.Valid;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@RestController
@RequestMapping("/departments")
public class DepartmentController {

    private static final Logger LOGGER = LoggerFactory.getLogger(DepartmentController.class);

    private static List<Department> departmentList = new ArrayList<>();

    static {
        departmentList.add(new Department(1, "HR"));
        departmentList.add(new Department(2, "IT"));
    }

    @PostMapping
    public void addDepartment(@RequestBody @Valid Department department) {
        LOGGER.info("Start addDepartment");
        departmentList.add(department);
    }

    @PutMapping
    public void updateDepartment(@RequestBody @Valid Department department) {
        LOGGER.info("Start updateDepartment");
        for (int i = 0; i < departmentList.size(); i++) {
            if (departmentList.get(i).getId().equals(department.getId())) {
                departmentList.set(i, department);
                return;
            }
        }
        throw new RuntimeException("Department with ID " + department.getId() + " not found");
    }

    @DeleteMapping("/{id}")
    public void deleteDepartment(@PathVariable Integer id) {
        LOGGER.info("Start deleteDepartment");
        Department toRemove = null;
        for (Department dep : departmentList) {
            if (dep.getId().equals(id)) {
                toRemove = dep;
                break;
            }
        }
        if (toRemove != null) {
            departmentList.remove(toRemove);
        } else {
            throw new RuntimeException("Department with ID " + id + " not found");
        }
    }

    @GetMapping
    public List<Department> getAllDepartments() {
        return departmentList;
    }
}
